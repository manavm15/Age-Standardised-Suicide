## Goutham Indiran, u195004
## Majda Kasmi,
## Manav Mishra, u558101
##Sabrina de Graaf,
##Sadjia Safdari



## Load packages ---------------------------------------------------------------
library(dplyr)
library(tidyr)
library(ggplot2)
library(caret)
# your own package

## *************************Load data*************************************

# in your submission (as a .zip document), there should be an "input" directory
# that holds your datafiles as .txt or .csv.
# Provide relative paths upon submission in your script that allow direct loading

shooting_df <-
  read.csv(
    "input/fatal-police-shootings-data.csv",
    stringsAsFactors = FALSE,
    na.strings = c("", "NA")
  )




#*****************write all functions here******************************

convert_factor <- function(column_name) {
  column_name <- as.factor(column_name)
}
non_spaces <- function(vec) {
  newvec <- tolower(vec)
  if (grepl(" ", newvec) == TRUE) {
    if (grepl("not", newvec) == TRUE) {
      newvec1 <- substr(newvec, start = 1, stop = 3)
      newvec2 <- gsub("(\\w{1})$", "\\1.", newvec1)
      newvec3 <- substr(newvec, start = 5 , stop = 11)
      dot_added <- paste0(newvec2, newvec3)
      vec[vec] <- dot_added
    }
    else {
      newvec1 <- substr(newvec, start = 1, stop = 4)
      newvec2 <- gsub("(\\w{1})$", "\\1.", newvec1)
      newvec3 <- substr(vec, start = 6, stop = 8)
      newvec4 <- gsub("(\\w{1})$", "\\1.", newvec3)
      newvec5 <- substr(newvec, start = 10 , stop = 16)
      dot_added <- paste0(newvec2, newvec4, newvec5)
      vec[vec] <- dot_added
    }
  }
  else{
    vec[vec] <- tolower(vec)
  }
}

# **************explore and analyse data here ***************************

#Cleaning dataset
#Special characters (e.g. commas in numeric values)
#Numeric values stored as text/character data types
#Duplicate rows
#Misspellings
#Inaccuracies
#White space
#Missing data
#Null values for empty rows
cleaned_shooting_df <- shooting_df %>%
  select(-c(latitude, longitude, is_geocoding_exact)) %>%
  drop_na() %>%  mutate_at(
    vars(
      gender,
      race,
      signs_of_mental_illness,
      flee,
      threat_level,
      body_camera,
      manner_of_death,
      armed
    ),
    list(convert_factor)
  ) %>%
  mutate(
    race = recode(
      race,
      "A" = "Asian",
      "B" = "Black",
      "H" = "Hispanic",
      "N" = "Native.American",
      "O" = "Other",
      "W" = "White"
    ),
    gender = recode(gender, "F" = "Female", "M" = "Male")
  )

police_na_omit <- cleaned_shooting_df %>%
  select(-c("id", "name", "city", "state", "date")) %>% group_by(manner_of_death) %>%
  mutate(c = n())
police_na_omit$manner_of_death <-
  apply(police_na_omit[, "manner_of_death",
                       drop = F], 1, non_spaces)
police_na_omit$flee <- apply(police_na_omit[, "flee",
                                            drop = F], 1, non_spaces)
police_na_omit$manner_of_death <-
  factor(police_na_omit$manner_of_death)
police_na_omit$flee <- factor(police_na_omit$flee)
str(police_na_omit)

# ***************Plotting******************************************

## Upon plotting the barplot and analysing it comes to attention that, number of
## people shot, shot and tasered were as compared to when the body camera was
## present.
death_manner_plot <- ggplot(police_na_omit,
                            aes(x = manner_of_death, fill = body_camera)) +
  geom_bar(position = "dodge") +
  facet_grid( ~ race)
death_manner_plot

# ***************Research Questions 2******************************************
# Do body cameras have an influence on the likelihood of a deadly shooting by
# police officers?

# ***************Splitting data***********************************************

set.seed(1)

trn_index <-
  createDataPartition(y = police_na_omit$manner_of_death,
                      p = 0.70,
                      list = FALSE)

trn_set_death <- police_na_omit[trn_index, ]
tst_set_death <- police_na_omit[-trn_index, ]

## -----------------Plot graph-------------------------------------
death_manner_plt <- trn_set_death %>%
  select(manner_of_death, body_camera)
## *************** K-NN ******************************************
set.seed(1)
death_knn <- train(
  manner_of_death ~ body_camera,
  method = "knn",
  data = trn_set_death,
  trControl = trainControl(
    method = "repeatedcv",
    number = 5,
    repeats = 3,
    sampling = c("down", "up"),
    returnResamp = "all",
    classProbs = TRUE
  )
)
make.names(trn_set_death$body_camera)
summary(death_knn)

pred_death_knn <- predict(death_knn, tst_set_death)
cnf_mtrx_knn <-
  confusionMatrix(pred_death_knn, as.factor(tst_set_death$manner_of_death))
cnf_mtrx_knn
